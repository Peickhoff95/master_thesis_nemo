name: "Conformer-Reconstruction-Small-Hyperopt"

model:
  sample_rate: 16000
  log_prediction: true
  load_conformer_weights: /data/4eickhof/repos/master_thesis_nemo/pretrained_models/conformer_ctc_small.pt
  freeze_conformer: true
  freeze_wsum: false
  train_ds:
    manifest_filepath: '/data/4eickhof/data/NSD/trainset_28spk_txt.json,/data/4eickhof/data/NSD/trainset_56spk_txt.json'
    sample_rate: 16000
    batch_size: 8
    shuffle: true
    num_workers: 16
    pin_memory: true
    use_start_end_token: false
    trim_silence: false
    max_duration: 16.7
    min_duration: 0.1
    shuffle_n: 2048
    is_tarred: false
  validation_ds:
    manifest_filepath: /data/4eickhof/data/NSD/testset_txt.json
    sample_rate: 16000
    batch_size: 8
    shuffle: false
    num_workers: 16
    pin_memory: true
    use_start_end_token: false
    is_tarred: false
  test_ds:
    manifest_filepath: /data/4eickhof/data/NSD/testset_txt.json
    sample_rate: 16000
    batch_size: 8
    shuffle: false
    num_workers: 16
    pin_memory: true
    use_start_end_token: false
    is_tarred: false
  tokenizer:
    dir: /data/4eickhof/repos/master_thesis_nemo/experiments/tokenizers/librispeech_tokenizer_wpe_v128
    type: wpe
  preprocessor:
    _target_: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    sample_rate: 16000
    normalize: per_feature
    window_size: 0.025
    window_stride: 0.01
    window: hann
    features: 80
    n_fft: 512
    frame_splicing: 1
    dither: 1.0e-05
    pad_to: 0
    stft_conv: false
    #  spec_augment:
    #_target_: nemo.collections.asr.modules.SpectrogramAugmentation
    #freq_masks: 2
    #time_masks: 5
    #freq_width: 27
    #time_width: 0.05
  encoder:
    _target_: nemo.collections.asr.modules.ReconstructionEncoder
    feat_in: 80
    feat_out: -1
    n_layers: 16
    d_model: 176
    subsampling: striding
    subsampling_factor: 4
    subsampling_conv_channels: 176
    ff_expansion_factor: 4
    self_attention_model: rel_pos
    n_heads: 4
    xscaling: true
    untie_biases: true
    pos_emb_max_len: 5000
    conv_kernel_size: 31
    dropout: 0.0
    dropout_emb: 0.0
    dropout_att: 0.1
    wsum_bias: false
  decoder:
    _target_: nemo.collections.asr.modules.ReconstructionDecoder
    feat_in: 176
    feat_out: 80
    n_networks: 4
    n_layers: 4
    normal_bias: True
    gate_bias: -1.0
  optim:
    name: adam
    lr: 0.001
    betas:
    - 0.9
    - 0.98
    weight_decay: 0.001
    sched: 
            name: CosineAnnealing
            warmup_steps: Null
            warmup_ratio: 0.0
            min_lr: 1.0e-06
            last_epoch: -1
  target: nemo.collections.asr.models.reconstruction_models.ReconstructionModel

trainer:
  devices: "1" # number of GPUs, -1 would use all available GPUs
  num_nodes: 1
  max_epochs: 1000
  max_steps: null # computed at runtime if not set
  val_check_interval: 1.0 # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  accelerator: auto
  strategy: ddp_find_unused_parameters_false
  accumulate_grad_batches: 1
  gradient_clip_val: 0.0
  precision: 32 # Should be set to 16 for O1 and O2 to enable the AMP.
  log_every_n_steps: 10  # Interval of logging.
  progress_bar_refresh_rate: 10
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.
  num_sanity_val_steps: 0 # number of steps to perform validation steps for sanity check the validation process before starting the training, setting to 0 disables it
  check_val_every_n_epoch: 1 # number of evaluations on validation every n epochs
  sync_batchnorm: true
  enable_checkpointing: False  # Provided by exp_manager
  logger: false  # Provided by exp_manager

exp_manager:
  exp_dir: /data/4eickhof/repos/master_thesis_nemo/experiments
  name: ${name}
  create_tensorboard_logger: true
  create_checkpoint_callback: true
  checkpoint_callback_params:
    # in case of multiple validation sets, first one is used
    monitor: "val_loss"
    mode: "min"
    save_top_k: 5
    always_save_nemo: True # saves the checkpoints as nemo files instead of PTL checkpoints

  # you need to set these two to True to continue the training
  resume_if_exists: False
  resume_ignore_no_checkpoint: False

  # You may use this section to create a W&B logger
  create_wandb_logger: false
  wandb_logger_kwargs:
    name: null
    project: null
